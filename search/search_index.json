{
    "docs": [
        {
            "location": "/",
            "text": "d-nginx-charlesreid1\n\u00b6\n\n\nThis repo contains docker containers\nand a docker compose file for running\nan nginx web server for static content\non charlesreid1.com.\n\n\nThis repo is used in \npod-charlesreid1\n.\n\n\nThe services are just:\n* nginx\n\n\nIf you want to do SSL you can, but you have to \nrun Let's Encrypt outside of the container\nand bind-mount your certificates into the \ncontainer at \n/etc/letsencrypt\n.\n\n\nPretty simple, right?\n\n\nConfig files\n\u00b6\n\n\nAll \n*.conf\n files in the \nconf.d/\n directory will be picked up by nginx.\n\n\nThe config files must be named \n*.conf\n.\n\n\nVolumes\n\u00b6\n\n\nNo data volumes are used.\n\n\n\n\nnginx static content is a bind-mounted host directory\n\n\nlets encrypt generates site certs, which will be bind-mounted into host directory\n\n\n\n\n  web:\n    volumes:\n      - ./letsencrypt_certs:/etc/nginx/certs\n      - ./letsencrypt_www:/var/www/letsencrypt\n\n  letsencrypt:\n    image: certbot/certbot\n    command: /bin/true\n    volumes:\n      - ./letsencrypt_certs:/etc/letsencrypt\n      - ./letsencrypt_www:/var/www/letsencrypt\n\n\n\n\n\nCerts and Secrets\n\u00b6\n\n\nLets Encrypt should generate certificates at \n/etc/letsencrypt/live/domain/\n:\n\n\nroot@krash:/home/charles/codes/docker/pod-charlesreid1-site# ls -l /etc/letsencrypt/live/charlesreid1.blue/\ntotal 4\nlrwxrwxrwx 1 root root  41 Mar 27 01:03 cert.pem -> ../../archive/charlesreid1.blue/cert1.pem\nlrwxrwxrwx 1 root root  42 Mar 27 01:03 chain.pem -> ../../archive/charlesreid1.blue/chain1.pem\nlrwxrwxrwx 1 root root  46 Mar 27 01:03 fullchain.pem -> ../../archive/charlesreid1.blue/fullchain1.pem\nlrwxrwxrwx 1 root root  44 Mar 27 01:03 privkey.pem -> ../../archive/charlesreid1.blue/privkey1.pem\n-rw-r--r-- 1 root root 543 Mar 27 01:03 README\n\n\n\n\n\nThese certificate files will be bind-mounted into the nginx container.\n\n\nBackups\n\u00b6\n\n\nSite content comes from github.\nNothing to back up.\n\n\nStatic Content\n\u00b6\n\n\nQuestion: should we bake the site's \nstatic content into the container,\nand require rebuild/redeploy when\nsite content changes?\n\n\nAnswer: No. We clone a local copy of \nthe gh-pages branch, and bind-mount \nthat into the container.\n\n\nThis enables webhooks to update \nthe static site contents\nwithout disturbing the container.",
            "title": "Home"
        },
        {
            "location": "/#d-nginx-charlesreid1",
            "text": "This repo contains docker containers\nand a docker compose file for running\nan nginx web server for static content\non charlesreid1.com.  This repo is used in  pod-charlesreid1 .  The services are just:\n* nginx  If you want to do SSL you can, but you have to \nrun Let's Encrypt outside of the container\nand bind-mount your certificates into the \ncontainer at  /etc/letsencrypt .  Pretty simple, right?",
            "title": "d-nginx-charlesreid1"
        },
        {
            "location": "/#config-files",
            "text": "All  *.conf  files in the  conf.d/  directory will be picked up by nginx.  The config files must be named  *.conf .",
            "title": "Config files"
        },
        {
            "location": "/#volumes",
            "text": "No data volumes are used.   nginx static content is a bind-mounted host directory  lets encrypt generates site certs, which will be bind-mounted into host directory     web:\n    volumes:\n      - ./letsencrypt_certs:/etc/nginx/certs\n      - ./letsencrypt_www:/var/www/letsencrypt\n\n  letsencrypt:\n    image: certbot/certbot\n    command: /bin/true\n    volumes:\n      - ./letsencrypt_certs:/etc/letsencrypt\n      - ./letsencrypt_www:/var/www/letsencrypt",
            "title": "Volumes"
        },
        {
            "location": "/#certs-and-secrets",
            "text": "Lets Encrypt should generate certificates at  /etc/letsencrypt/live/domain/ :  root@krash:/home/charles/codes/docker/pod-charlesreid1-site# ls -l /etc/letsencrypt/live/charlesreid1.blue/\ntotal 4\nlrwxrwxrwx 1 root root  41 Mar 27 01:03 cert.pem -> ../../archive/charlesreid1.blue/cert1.pem\nlrwxrwxrwx 1 root root  42 Mar 27 01:03 chain.pem -> ../../archive/charlesreid1.blue/chain1.pem\nlrwxrwxrwx 1 root root  46 Mar 27 01:03 fullchain.pem -> ../../archive/charlesreid1.blue/fullchain1.pem\nlrwxrwxrwx 1 root root  44 Mar 27 01:03 privkey.pem -> ../../archive/charlesreid1.blue/privkey1.pem\n-rw-r--r-- 1 root root 543 Mar 27 01:03 README  These certificate files will be bind-mounted into the nginx container.",
            "title": "Certs and Secrets"
        },
        {
            "location": "/#backups",
            "text": "Site content comes from github.\nNothing to back up.",
            "title": "Backups"
        },
        {
            "location": "/#static-content",
            "text": "Question: should we bake the site's \nstatic content into the container,\nand require rebuild/redeploy when\nsite content changes?  Answer: No. We clone a local copy of \nthe gh-pages branch, and bind-mount \nthat into the container.  This enables webhooks to update \nthe static site contents\nwithout disturbing the container.",
            "title": "Static Content"
        }
    ]
}